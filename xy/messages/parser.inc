XY_MSG(e_required_new_line, recoverable_error, "A new line is required here.")
XY_MSG(e_unexpected_symbol, error, "A %s was not expected here.")
XY_MSG(e_expected_different_symbol, error, "A %s was not expected here; I was expecting to see a %s instead.")
XY_MSG(e_unexpected_follow_symbol, error, "A %s was not expected here. I was expecting to see a %s after the %s.")
XY_MSG(e_unexpected_follow_symbol_2, error, "A %s was not expected here. I was expected to see either a %s or a %s after the %s.")
XY_MSG(e_arrow_in_expr_context, error, "Unexpected %s in this context. These are used for declaring function types; however, the surrounding context is an expression and not a type declaration.")
XY_MSG(e_bad_type_operator, error, "Unexpected %s following a partial type declaration. It looked like you were making an inline type declaration, but then you used an operator that was not expected in this case. Operators that you can use here are '->', '+', and '*'.")
XY_MSG(e_not_a_type_for_instance, error, "It looks like you were trying to instantiate a type; however, what preceded this was not a type name or an inline type declaration.")
XY_MSG(e_not_an_expression_for_type_instance, error, "I was expected some sort of expression here (something that ends up evaluating into a value) but I didn't get that.")
XY_MSG(e_type_decl_expected_before_type_op, error, "I was expecting a type declaration of some sort (e.g. a type name or inline type declaration) before this type operator.")
XY_MSG(e_array_element_must_be_expr, error, "I was expecting an expression here but you gave me something else (probably a type declaration). What you gave me is well-formed, but it's not what I wanted.")
XY_MSG(e_missing_expr_in_let, error, "Missing or invalid expression to match the variable/function name '%s' in this 'let' statement.")
XY_MSG(e_array_access_on_non_expr, error, "The array access operator a[b] must have both a and b as expressions.")
XY_MSG(e_missing_type_decl_in_let, error, "Missing or invalid type declaration to match the type name '%s' in this 'let' statement.")
XY_MSG(e_bad_suffix_type_decl, error, "An %s is not allowed at this point in an (inline) type declaration.")
XY_MSG(e_type_decl_or_func_expr_expected, error, "I was expecting to find an inline type declaration (for template instantiation) or an expression (that has a function type) before this point.")
XY_MSG(e_func_arg_not_expr, error, "Non-template arguments to function calls must be expressions.")
XY_MSG(e_tpl_arg_not_ast, error, "Arguments to type template instantiations must be either expressions or type declarations.")
XY_MSG(e_tpl_must_have_args, error, "Template type instantiations must have at least one argument. No arguments were provided.")
XY_MSG(e_incomplete_tpl_inst, error, "Incomplete template type instantiation. There was probably a problem with one of the template type arguments, or you have provided no arguments.")
XY_MSG(e_bin_rhs_not_expr, error, "Incomplete right-hand-side to the binary operator. I expected an expression after the %s but when I tried to parse one I got an error.")
XY_MSG(w_bin_empty_tpl_and_func_args, warning, "Possibly ambiguous statement. A function call specifying zero template arguments and zero expression arguments, but still specifying the ';' might be ambiguous.")
XY_MSG(e_func_lhs_is_literal, error, "Performing function call on a non-function expression. The expression before the left parenthesis (denoting a function application/call) should evaluate to something with a function type.")
XY_MSG(e_func_decl_bad_arrow, error, "I was expecting an (inline) type declaration here specifying either a template argument type, an argument type, or the return type for this function.")
XY_MSG(e_type_decl_bad_arrow, error, "I was expecting an (inline) type declaration here specifying either a template argument type, or Type (i.e. that this is a type) for this type declaration.")
XY_MSG(e_func_no_arg_type, error, "I was expecting either a function argument type here or the return type of this function.")
XY_MSG(e_func_decl_multiple_names, error, "You can only let-bind one name while specifying a new function using the declaration (::) syntax. You have bound %lu names.")
XY_MSG(e_tpl_decl_multiple_names, error, "You can only let-bind one name while specifying a new template type using the declaration (::) syntax. You have bound %lu names.")
XY_MSG(e_missing_arg_for_type, error, "Expected a %s here to match the declared parameter with type %s. Instead, I got a %s.")
XY_MSG(n_tpl_arg_need_type_name_source, note, "Type of expected template argument declared here.")
XY_MSG(n_func_arg_need_type_name_source, note, "Type of expected function argument declared here.")
XY_MSG(e_func_cant_return_type, error, "A function is not allowed to return a type or a template.")
XY_MSG(e_template_needs_args, error, "A template type must have at least one argument type as well as returning a type. Only one type was given.")
XY_MSG(e_template_must_return_type, error, "A type template must return either a type or another type template.")
XY_MSG(e_rebind_reserved_type, error, "The %s cannot be re-bound as it is a reserved keyword of the language.")
XY_MSG(e_error_parsing, error, "An error occurred while parsing this document. The error either occurred at this token, or somewhere just before this token.")
